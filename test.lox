fun makeFilter(min) {
    var filter = lambda () {print(min);};
    return filter;
}

var greaterThanX = makeFilter(5);
var greaterThanY = makeFilter(6);

greaterThanX();
greaterThanY();

var count = 3;

fun tick() {
  if (count > 0) {
    print count;
    count = count - 1;
    return false;
  }
  print "Blast off!";
  return true;
}

while (!tick()) {}

fun makeCounter() {
  var i = 0;
  var count = lambda () {
    i = i + 1;
    print i;
  };

  return count;
}

var counter = makeCounter();
for (var i = 0; i < 10; i = i + 1) {
  counter();
}


var repeat = lambda (f, n) {
  if (n == 1) {
    return lambda (a) : f(a);
  }
  return lambda (a) : repeat(f, n - 1)(f(a));
};

var addOne = (lambda (a) : a + 1);

print repeat(addOne, 3)(1);